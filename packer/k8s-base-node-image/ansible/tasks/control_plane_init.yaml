---
- name: Initialize the Kubernetes cluster
  ansible.builtin.command: |
    kubeadm init \
      --pod-network-cidr={{ pod_network_cidr }} \
      --control-plane-endpoint="{{ control_plane_endpoint }}:6443" \
      --apiserver-advertise-address="{{ ansible_default_ipv4.address }}" \
      --upload-certs
  args:
    # This is the key for idempotency:
    # The command will NOT run if this file already exists.
    creates: /etc/kubernetes/admin.conf


# Add a pause or wait for pods to be ready if needed

- name: Get kubeadm join command for workers
  ansible.builtin.command: kubeadm token create --print-join-command
  register: kubeadm_join_command
  changed_when: false

- name: Get kubeadm join command for masters
  ansible.builtin.command: kubeadm init phase upload-certs --upload-certs
  register: certs_key
  changed_when: false

- name: Test Key Vault access
  azure.azcollection.azure_rm_keyvaultinfo:
    name: "{{ kv_name }}"
    resource_group: "{{ resource_group_name }}"
  register: kv_info

- name: Display Key Vault info
  debug:
    var: kv_info

- name: Set a secret in Key Vault
  azure.azcollection.azure_rm_keyvaultsecret:
    # Replace with the name of your Key Vault (from Terraform output)
    keyvault_uri: {{ kv_uri }}
    secret_name: "k8s_worker_join_command"
    secret_value: "{{ kubeadm_join_command.stdout }}"
  register: output

- name: Display the result
  debug:
    var: output

- name: Set fact with join command
  ansible.builtin.set_fact:
    k8s_join_command: "{{ kubeadm_join_command.stdout }}"

- name: Mark master as initialized (to prevent re-initialization)
  ansible.builtin.set_fact:
    k8s_master_initialized: true

# ansible-playbook -i /var/tmp/ansible/inventories/hosts/hosts.ini /var/tmp/ansible/setup_control_plane.yaml --extra-var "control_plane_endpoint=172.174.23.162" --extra-var "pod_network_cidr=10.244
#.0.0/16" --extra-var "kv_uri=https://cluster-kv-82npeuop.vault.azure.net/" --extra-var "ansible_user=azureadmin" --extra-var "kv_name=cluster-kv-82npeuop" --extra-var "resource_group_name=self-managed-k8s-cluster-rg"